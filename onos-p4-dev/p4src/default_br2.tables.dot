digraph g {
   buffer [shape=doublecircle];
   egress [shape=doublecircle];
   _condition_0 [shape=box label="(ipv4.protocol == 160)"];
   _condition_0 -> _condition_3 [arrowhead=odot];
   _condition_3 [shape=box label="(ipv4.protocol == 161)"];
   _condition_3 -> _condition_7 [arrowhead=odot];
   _condition_7 [shape=box label="((valid ipv4) and (ipv4.ttl > 0))"];
   _condition_7 -> buffer [arrowhead=odot];
   _condition_7 -> ip_port [arrowhead=dot];
   ip_port [shape=ellipse];
   ip_port -> buffer [arrowhead=normal label="set_egress_port"];
   ip_port -> buffer [arrowhead=normal label="_drop"];
   _condition_3 -> _condition_4 [arrowhead=dot];
   _condition_4 [shape=box label="(standard_metadata.ingress_port == 2)"];
   _condition_4 -> data_inter_pid_ip [arrowhead=odot];
   data_inter_pid_ip [shape=ellipse];
   data_inter_pid_ip -> _condition_7 [arrowhead=normal label="set_ip"];
   data_inter_pid_ip -> _condition_7 [arrowhead=normal label="_drop"];
   _condition_4 -> data_pids_o_subtract [arrowhead=dot];
   data_pids_o_subtract [shape=ellipse];
   data_pids_o_subtract -> _condition_5 [arrowhead=normal label="set_pids_o"];
   _condition_5 [shape=box label="(data.pids_o == 0)"];
   _condition_5 -> _condition_6 [arrowhead=odot];
   _condition_6 [shape=box label="(data.pids_o == 1)"];
   _condition_6 -> _condition_7 [arrowhead=odot];
   _condition_6 -> data_intra_pid_ip [arrowhead=dot];
   data_intra_pid_ip [shape=ellipse];
   data_intra_pid_ip -> _condition_7 [arrowhead=normal label="set_ip"];
   data_intra_pid_ip -> _condition_7 [arrowhead=normal label="_drop"];
   _condition_5 -> data_nid_c_ip [arrowhead=dot];
   data_nid_c_ip [shape=ellipse];
   data_nid_c_ip -> _condition_7 [arrowhead=normal label="set_ip"];
   data_nid_c_ip -> _condition_7 [arrowhead=normal label="_drop"];
   data_pids_o_subtract -> _condition_5 [arrowhead=normal label="_drop"];
   _condition_0 -> _condition_1 [arrowhead=dot];
   _condition_1 [shape=box label="(standard_metadata.ingress_port == 1)"];
   _condition_1 -> _condition_2 [arrowhead=odot];
   _condition_2 [shape=box label="(standard_metadata.ingress_port == 2)"];
   _condition_2 -> _condition_7 [arrowhead=odot];
   _condition_2 -> get_to_rm [arrowhead=dot];
   get_to_rm [shape=ellipse];
   get_to_rm -> _condition_7 [arrowhead=normal label="set_ip"];
   get_to_rm -> _condition_7 [arrowhead=normal label="_drop"];
   _condition_1 -> get_inter_pid_ip [arrowhead=dot];
   get_inter_pid_ip [shape=ellipse];
   get_inter_pid_ip -> _condition_7 [arrowhead=normal label="set_ip"];
   get_inter_pid_ip -> _condition_7 [arrowhead=normal label="_drop"];
   buffer -> egress [arrowhead=normal]
}
